{"version":3,"sources":["images sync /^/.*$","logo.svg","images/apple-pie.jpg","images/banana-muffin.jpg","images/blueberry-muffin.jpg","images/brownie-cookie.jpg","images/brownies.jpg","images/bw-milkshake.jpg","images/cherry-pie.jpg","images/choc-cupcake.jpg","images/chocolate-milkshake.jpg","images/chocolatechip-cookie.jpg","images/cookiecream-milkshake.jpg","images/oreo-pie.jpg","images/pumpkin-muffin.jpg","images/pumpkin-pie.jpg","images/sugar-cookie.jpg","images/vanilla-cupcake.jpg","images/vanilla-milkshake.jpg","components/Nav.js","base.js","restock.js","components/Menu.js","components/Order.js","components/ItemEdit.js","components/Inventory.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Nav","exact","to","activeClassName","className","this","props","orderNumItems","Component","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","restock","name","type","price","available","image","description","Menu","adjustQuantity","event","parseInt","target","value","setState","quantity","state","preventDefault","console","log","button","appState","items","item","index","onClick","addToOrder","disabled","key","src","require","alt","pattern","maxLength","min","defaultValue","onKeyDown","preventNonNums","Order","confirmOrder","window","alert","resetOrder","orderRender","orderStatus","orderList","length","orderTotal","reduce","prev","cur","subTotal","class","toFixed","removeFromOrder","ItemEdit","LiveChange","changeSync","targetItem","inventoryChange","itemIndex","noExtraDec","input","dotBreaks","test","dotBreaks2","which","htmlFor","onChange","step","Inventory","selectorIndexChange","inventoryRender","resetStock","itemIndexChange","fieldIncrement","deleteFromInventory","App","updatedItem","stateToBe","newIndexState","currentTarget","previousSibling","currentOrder","newOrderItem","push","orderItem","updatedOrder","splice","ref","on","snapshot","val","syncState","context","href","rel","logo","path","render","bind","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbee93b7.chunk.js","sourcesContent":["var map = {\n\t\"./apple-pie.jpg\": 59,\n\t\"./banana-muffin.jpg\": 60,\n\t\"./blueberry-muffin.jpg\": 61,\n\t\"./brownie-cookie.jpg\": 62,\n\t\"./brownies.jpg\": 63,\n\t\"./bw-milkshake.jpg\": 64,\n\t\"./cherry-pie.jpg\": 65,\n\t\"./choc-cupcake.jpg\": 66,\n\t\"./chocolate-milkshake.jpg\": 67,\n\t\"./chocolatechip-cookie.jpg\": 68,\n\t\"./cookiecream-milkshake.jpg\": 69,\n\t\"./oreo-pie.jpg\": 70,\n\t\"./pumpkin-muffin.jpg\": 71,\n\t\"./pumpkin-pie.jpg\": 72,\n\t\"./sugar-cookie.jpg\": 73,\n\t\"./vanilla-cupcake.jpg\": 74,\n\t\"./vanilla-milkshake.jpg\": 75\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 29;","module.exports = __webpack_public_path__ + \"static/media/logo.11e331ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/apple-pie.f0f7c88c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banana-muffin.18aede70.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blueberry-muffin.ca57457d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brownie-cookie.58651929.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brownies.e7c1f774.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bw-milkshake.9f8e7fa1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cherry-pie.a7654750.jpg\";","module.exports = __webpack_public_path__ + \"static/media/choc-cupcake.5dfd17e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chocolate-milkshake.b440e748.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chocolatechip-cookie.6da8cfb6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cookiecream-milkshake.381327c2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oreo-pie.5d48c65c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pumpkin-muffin.b4ed781d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pumpkin-pie.3b583739.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sugar-cookie.a90085b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vanilla-cupcake.87451d92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vanilla-milkshake.2cf013bd.jpg\";","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul id=\"navbar\">\r\n                    <NavLink exact to=\"/\" activeClassName=\"activeNavLink\" >\r\n                        <li className=\"nav-li\">Menu</li>\r\n                    </NavLink>\r\n\r\n                    <NavLink to=\"/Order\" activeClassName=\"activeNavLink\" >\r\n                        <li className=\"nav-li\">Order ({this.props.orderNumItems})</li>\r\n                    </NavLink>\r\n\r\n                    <NavLink to=\"/Inventory\" activeClassName=\"activeNavLink\" >\r\n                        <li className=\"nav-li\">Inventory</li>\r\n                    </NavLink>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\n// Firebase Config\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAc1msconuE9GAmCc9inRc4iih8SNL7cmw\",\r\n    authDomain: \"idm364-40174.firebaseapp.com\",\r\n    databaseURL: \"https://idm364-40174.firebaseio.com\",\r\n    projectId: \"idm364-40174\",\r\n    storageBucket: \"idm364-40174.appspot.com\",\r\n    messagingSenderId: \"783719103821\",\r\n    appId: \"1:783719103821:web:e4fddaf487c532d3\"\r\n  });\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\nexport default base;","const restock = [\r\n    {\r\n    name: \"Brownie\",\r\n    type: \"Brownie\",\r\n    price: 4.99,\r\n    available: 10,\r\n    image: \"brownies.jpg\",\r\n    description: \"The OG treat: a chocolate brownie with powder on top.\"\r\n}, {\r\n    name: \"Pumpkin Spice Muffin\",\r\n    type: \"Muffin\",\r\n    price: 5.99,\r\n    available: 10,\r\n    image: \"pumpkin-muffin.jpg\",\r\n    description: \"A fall favorite for breakfast or dessert. Classic pumpkin taste with icing drizzle to die for\"\r\n}, {\r\n    name: \"Banana Chocolate Chip Muffin\",\r\n    type: \"Muffin\",\r\n    price: 5.49,\r\n    available: 10,\r\n    image: \"banana-muffin.jpg\",\r\n    description: \"Banana muffin with a splash of chocolate chips bound to boost your energy\"\r\n}, {\r\n    name: \"Blueberry Muffin\",\r\n    type: \"Muffin\",\r\n    price: 4.99,\r\n    available: 10,\r\n    image: \"blueberry-muffin.jpg\",\r\n    description: \"A great way to start the day. Fruity-berry flavor in a light and airy muffin\"\r\n}, {\r\n    name: \"Chocolate Cupcake\",\r\n    type: \"Cupcake\",\r\n    price: 5.49,\r\n    available: 10,\r\n    image: \"choc-cupcake.jpg\",\r\n    description: \"Chocolate on chocolate. Don't forget a napkin!\"\r\n}, {\r\n    name: \"Vanilla Cupcake\",\r\n    type: \"Cupcake\",\r\n    price: 5.49,\r\n    available: 10,\r\n    image: \"vanilla-cupcake.jpg\",\r\n    description: \"A pretty treat with beautiful taste.\"\r\n}, {\r\n    name: \"Cherry Pie\",\r\n    type: \"Pie\",\r\n    price: 10.99,\r\n    available: 10,\r\n    image: \"cherry-pie.jpg\",\r\n    description: \"Sweet and delcicious. Pairs great with a scoop of vanilla ice cream.\"\r\n}, {\r\n    name: \"Pumpkin Pie\",\r\n    type: \"Pie\",\r\n    price: 10.49,\r\n    available: 10,\r\n    image: \"pumpkin-pie.jpg\",\r\n    description: \"A thanksgiving staple that tastes like home.\"\r\n}, {\r\n    name: \"Apple Pie\",\r\n    type: \"Pie\",\r\n    price: 9.99,\r\n    available: 10,\r\n    image: \"apple-pie.jpg\",\r\n    description: \"An American class. Don't leave this sitting on the window sill!\"\r\n}, {\r\n    name: \"Oreo Pie\",\r\n    type: \"Pie\",\r\n    price: 8.99,\r\n    available: 10,\r\n    image: \"oreo-pie.jpg\",\r\n    description: \"Soft, fun and light. An oreo cookie crust with cool-whip filling.\"\r\n}, {\r\n    name: \"Chocolate Milkshake\",\r\n    type: \"Milkshake\",\r\n    price: 5.49,\r\n    available: 10,\r\n    image: \"chocolate-milkshake.jpg\",\r\n    description: \"Chocolate milkshake\"\r\n}, {\r\n    name: \"Vanilla Milkshake\",\r\n    type: \"Milkshake\",\r\n    price: 5.49,\r\n    available: 10,\r\n    image: \"vanilla-milkshake.jpg\",\r\n    description: \"Vanilla milkshake\"\r\n}, {\r\n    name: \"Black & White Milkshake\",\r\n    type: \"Milkshake\",\r\n    price: 5.99,\r\n    available: 10,\r\n    image: \"bw-milkshake.jpg\",\r\n    description: \"Chocolate and vanilla ice cream infused with hot fudge.\"\r\n}, {\r\n    name: \"Cookies & Creme Milkshake\",\r\n    type: \"Milkshake\",\r\n    price: 5.99,\r\n    available: 10,\r\n    image: \"cookiecream-milkshake.jpg\",\r\n    description: \"Vanilla ice cream with crushed oreo pieces\"\r\n}, {\r\n    name: \"Chocolate Chip Cookie\",\r\n    type: \"Cookie\",\r\n    price: 4.49,\r\n    available: 10,\r\n    image: \"chocolatechip-cookie.jpg\",\r\n    description: \"The most iconic cookie.\"\r\n}, {\r\n    name: \"Butter Cookie\",\r\n    type: \"Cookie\",\r\n    price: 4.49,\r\n    available: 10,\r\n    image: \"sugar-cookie.jpg\",\r\n    description: \"Crisp yet smooth.\"\r\n}, {\r\n    name: \"Brownie Cookie\",\r\n    type: \"Combo\",\r\n    price: 4.99,\r\n    available: 10,\r\n    image: \"brownie-cookie.jpg\",\r\n    description: \"A one of a kind hybrid. Cookie on the outside, brownie on the inside.\"\r\n}]\r\n\r\nexport default restock;","import React, { Component } from 'react';\r\n\r\nclass Menu extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            quantity: 1 \r\n        }\r\n        console.log(this.props);\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n    }\r\n\r\n    adjustQuantity = event => {\r\n        if(typeof(parseInt(event.target.value)) === 'number') {\r\n            this.setState({quantity: event.target.value});\r\n            event.target.value = this.state.quantity;\r\n        } else {\r\n            event.preventDefault();\r\n            console.log(parseInt(event.target.value));\r\n            console.log('entered a non-number');\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        let button;\r\n        return ( \r\n            <main>\r\n                <h2>Menu</h2>\r\n                <div className=\"menu-catalog\">\r\n                {this.props.appState.items.map((item,index) => {\r\n                    if(item.available < 1) {\r\n                        button = <button onClick={this.props.addToOrder} name={index} disabled=\"disabled\">Out of stock</button>; \r\n                    } else {\r\n                        button = <button onClick={this.props.addToOrder} name={index}>Add To Order</button>;\r\n                    }\r\n                    return (\r\n                        <div className=\"menu-item\" key={index}>\r\n                            <img src={require(`../images/${item.image}`)} alt={item.name} className=\"main-img\"></img>\r\n                            <h3>{item.name}</h3>\r\n                            <p name=\"item_price\" value={item.price}>${item.price} each</p>\r\n                            <p>{item.description}</p>\r\n                            <input pattern=\"[0-9]*\" maxLength='2' min=\"1\" type=\"number\" name=\"item_quantity\" defaultValue={1}\r\n                            onKeyDown={this.props.preventNonNums}></input>\r\n                            {button}\r\n                        </div>\r\n                    )\r\n                })}\r\n                </div>\r\n                \r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nclass Order extends Component {\r\n    confirmOrder = (event) => {\r\n        window.alert('Your order has been placed!');\r\n        this.props.resetOrder(event);\r\n    }\r\n    render() {\r\n        let orderRender;\r\n        let orderStatus = this.props.appState.orderList;\r\n        if(orderStatus.length == 0) {\r\n            orderRender = <p>Nothing ordered right now. Get to shopping!</p>            \r\n        } else {\r\n            let orderTotal = orderStatus.reduce((prev, cur) => prev+cur.subTotal,0);\r\n            orderRender = \r\n            <div className=\"order-slip\">\r\n                {this.props.appState.orderList.map((item,index) => {\r\n                    return (\r\n                        <div className=\"ordered-item\" key={index}>   \r\n                            <div>\r\n                                <p><strong>{index + 1})</strong> {item.quantity} {item.name}(s)</p> \r\n                                <p class=\"order-item-price\">${item.subTotal.toFixed(2)}</p>\r\n                            </div>\r\n                            <button value={index} onClick={this.props.removeFromOrder}>Remove</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <div id=\"order-conclusion\">\r\n                    <p><strong>Total:</strong> ${orderTotal.toFixed(2)}</p>\r\n                    <button className=\"confirm-btn\" onClick={this.confirmOrder}>Confirm</button>\r\n                </div>\r\n            </div>\r\n        }\r\n        return (\r\n            <main>\r\n                <h2>This Order</h2>\r\n                {orderRender}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\n\r\nclass ItemEdit extends Component {\r\n    LiveChange = event => {\r\n        const changeSync = {\r\n            ...this.props.targetItem,\r\n            [event.target.name]: event.target.value\r\n        };\r\n        this.props.inventoryChange(this.props.appState.itemIndex,changeSync);\r\n        console.log(`Changed ${event.target.name}`);\r\n    }\r\n\r\n    noExtraDec = event => {\r\n        //the 3 variables to decide what to do on period-key press\r\n        let input = (event.target.value);\r\n        let regex = /^\\.$/;\r\n        let regex2 = /.[0-9]$/;\r\n        let dotBreaks = regex.test(input);\r\n        let dotBreaks2 = regex2.test(input);\r\n        console.log(`pre-decision price was ${input}, dot here = ${dotBreaks}, ${dotBreaks2}`);\r\n        \r\n        //do not show/take the input if it's not a number, deletion, arrow, or period-key\r\n        if((event.which < 37 || event.which > 40) && (event.which < 48 || event.which > 57) \r\n        && event.which !== 8 && event.which != 190) {\r\n            event.preventDefault();\r\n            console.log('Irrelevant key...prevented input');\r\n        } \r\n\r\n        //if the pressed key was the period AND no more dots are allowed, meaning that\r\n        //1) the input value already includes a period\r\n        else if(event.which == 190 && (dotBreaks == true || dotBreaks2 == true)) {\r\n            event.preventDefault();\r\n            console.log(dotBreaks);\r\n            console.log(dotBreaks2);\r\n            console.log('already a period here')\r\n            } \r\n            \r\n            else {\r\n                  this.LiveChange(event);\r\n                }\r\n    }\r\n\r\n    render(props) {\r\n        return (\r\n            <form className=\"item-inventory-form\">\r\n                <img id=\"form-pic\" src={require(`../images/${this.props.appState.items[this.props.appState.itemIndex].image}`)} alt={this.props.appState.items[this.props.appState.itemIndex].name}></img>\r\n\r\n                <div className=\"form-area\" >\r\n                    <div>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" name=\"name\" \r\n                        value={this.props.appState.items[this.props.appState.itemIndex].name}\r\n                        onChange={this.LiveChange}></input>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        <input type=\"number\" name=\"price\" min=\"0.01\" step=\"0.01\" \r\n                        value={this.props.appState.items[this.props.appState.itemIndex].price}\r\n                        onChange={this.LiveChange} onKeyDown={this.noExtraDec}></input>\r\n                    </div>\r\n\r\n                    <div className=\"availability-control\">\r\n                        <label htmlFor=\"stock\"># Available</label>\r\n                        <input pattern=\"[0-9]*\" type=\"number\" name=\"available\" min=\"0\" step=\"1\" value={this.props.appState.items[this.props.appState.itemIndex].available}\r\n                        onChange={this.LiveChange} onKeyDown={this.props.preventNonNums}></input>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-area item-caption\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea name=\"description\" value={this.props.appState.items[this.props.appState.itemIndex].description}\r\n                    onChange={this.LiveChange}></textarea>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemEdit;","import React, { Component } from 'react';\r\nimport ItemEdit from './ItemEdit';\r\n\r\nclass Inventory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itemIndex: this.props.appState[this.props.itemIndex]\r\n        }\r\n    }\r\n\r\n    selectorIndexChange = event => {\r\n        this.setState({itemIndex: event.target.value});\r\n    }\r\n\r\n    render(props) {\r\n        //inventoryRender holds what to display on inventory section based on inventory status\r\n        let inventoryRender;\r\n        //the inventory information from the main app.js state\r\n        let inventoryStatus = this.props.appState.items;\r\n        if(inventoryStatus.length == 0) {\r\n            //Have a loading message while getting the inventory\r\n            inventoryRender = <p>Loading inventory...</p>\r\n        } else {\r\n            //Generate the realtime edit form with selector holding all the available items to choose from\r\n            inventoryRender = \r\n                <div className=\"inventory-forms\">\r\n                    <div id=\"inventory-btns-container\">\r\n                        <button id=\"reset-stock-btn\" className=\"inventory-btn\" onClick={this.props.resetStock}>Reset Stock</button>\r\n                        \r\n                        <select className=\"inventory-btn\" value={this.props.appState.itemIndex} onChange={this.props.itemIndexChange}>\r\n                            {this.props.appState.items.map((item,index) => { \r\n                                return (\r\n                                    <option key={index} onClick={this.props.itemIndexChange} value={index}>{item.name}</option>\r\n                                )\r\n                            })}\r\n                        </select>                        \r\n                    </div>                    \r\n\r\n                    <ItemEdit appState={this.props.appState}\r\n                    targetItem = {this.props.targetItem}\r\n                    inventoryChange={this.props.inventoryChange} \r\n                    fieldIncrement={this.props.fieldIncrement} \r\n                    deleteFromInventory={this.props.deleteFromInventory} \r\n                    resetStock={this.props.resetStock}\r\n                    itemIndexChange={this.props.itemIndexChange}\r\n                    preventNonNums={this.props.preventNonNums} />\r\n                </div>                \r\n        }\r\n        return (\r\n            <main>\r\n                <h2>Inventory</h2>\r\n                {inventoryRender}                \r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React, {Component} from 'react';\nimport logo from './logo.svg';\n\nimport './main.css';\n\n//The navigation, supported by React Router\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Nav from './components/Nav';\n\n//The necessary modules for inventory data\nimport base from './base';\nimport firebase from 'firebase';\nimport restock from './restock';\n\n//The 3 main interfaces of the site\nimport Menu from './components/Menu';\nimport Order from './components/Order';\nimport Inventory from './components/Inventory';\n\n\n\nclass App extends Component {\n  //Initialize the app with an empty state that will be filled with database info\n  constructor() {\n    super();\n    this.state = {\n        items: [],\n        itemIndex: 0,\n        orderList: []\n    };\n\n    const dbRef = firebase.database().ref('items');\n    dbRef.on('value', (snapshot) => {\n      let items = snapshot.val();\n      console.log(items);\n      //sync app state and database together so \n      this.ref = base.syncState('items', {\n          context: this,\n          state: 'items'\n      });\n    })\n  }\n\n  //Get the state connected to Firebase db\n  componentDidMount() {\n  }\n\n  //Event to sync any inventory form change to Firebase\n  inventoryChange = (key,updatedItem) => {\n    //make copy of the current state\n    const stateToBe = {...this.state.items};\n    //change value of copied state's [key]'th element to value of updated form element \n    stateToBe[key] = updatedItem;\n    this.setState({items: stateToBe});\n  }\n\n  //Event to reset the menu and inventory to original values\n  resetStock = () => {\n    this.setState({items: restock});\n  }\n\n  //Event to reset the menu and inventory to original values\n  resetOrder = () => {\n    this.setState({orderList: []});\n  }\n\n  //Change item index to keep the select bar in-sync with the item-edit-form\n  itemIndexChange = event => {\n    //make copy of app's itemIndex state\n    let newIndexState = this.state.itemIndex;\n    console.log(newIndexState);\n    console.log(event.target.value)\n    //convert event value from string to integer, then make it value of state copy\n    newIndexState = parseInt(event.target.value,10);\n    console.log(newIndexState);\n    //set state of itemIndex to the updated copy\n    this.setState({itemIndex: newIndexState});\n  }\n\n  //Event to add item(s) to the current order  \n  addToOrder = event => {\n    //get quantity for item(s) being ordered, make copy of order state, and get the item that was just ordered\n    let quantity = parseInt(event.currentTarget.previousSibling.value,10);\n    let currentOrder = this.state.orderList;\n    let newOrderItem = this.state.items[event.currentTarget.name];   \n    //add quantity as a property object and use it to reflect subtotal, then push object to the copied state\n    newOrderItem.quantity = quantity;\n    newOrderItem.subTotal = quantity * newOrderItem.price;\n    console.log(newOrderItem);\n    currentOrder.push(newOrderItem);\n    //setstate to the copy\n    this.setState({orderList: currentOrder});\n    console.log(this.state.orderList);\n  }\n\n  //Event to remove item from the current order  \n  removeFromOrder = event => {\n    let orderItem = event.target.value;\n    let updatedOrder = this.state.orderList;\n    updatedOrder.splice(orderItem,1);\n    console.log(updatedOrder);\n    this.setState({orderList: updatedOrder});\n    console.log(this.state.orderList);\n  }\n\n  //Make sure order and stock quantity can't be NaN or decimal\n  preventNonNums = event => {\n    //If the key != arrows, backspace, or numbers\n    if((event.which < 37 || event.which > 40) && (event.which < 48 || event.which > 57) && event.which !== 8 && event.which !== 46) {\n      event.preventDefault();\n      console.log('prevented, foo');\n    } else {\n      console.log('turkey');\n    }\n  }\n\n  render() {\n    return (\n      <Router className=\"App\">\n        <header className=\"App-header\">\n          <div id=\"intro-info-bar\">\n            <h1>The BAKEd Sale</h1>\n            <a href=\"https://github.com/jermestes/idm364-jje56\" target=\"_BLANK\" rel=\"noopener noreferrer\">About</a>\n          </div>\n          <img src={logo} className=\"App-logo\" alt=\"Best friends eating the best food\" />\n        </header>\n\n        <Nav orderNumItems={this.state.orderList.length}/>\n\n        <Switch>\n          <Route exact path=\"/\" render={ ()=> \n          <Menu appState={this.state} addToOrder={this.addToOrder.bind(this)}\n          preventNonNums={this.preventNonNums.bind(this)}/> } />\n          \n          <Route path=\"/order\" render={ ()=> \n          <Order appState={this.state} removeFromOrder={this.removeFromOrder.bind(this)}\n          resetOrder={this.resetOrder.bind(this)}/>} />\n\n          <Route path=\"/inventory\" render={ ()=> \n          <Inventory appState={this.state} \n          itemIndexChange={this.itemIndexChange.bind(this)} \n          inventoryChange={this.inventoryChange.bind(this)} \n          targetItem = {this.state.items[this.state.itemIndex]}\n          resetStock={this.resetStock.bind(this)} \n          preventNonNums={this.preventNonNums.bind(this)}/> } /> \n\n        </Switch>\n\n        <footer>\n          <p>©2019 The Baked Sale</p>\n        </footer>\n\n      </Router>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}